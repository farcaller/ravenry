name: Android Build & Deploy

on:
  # push:
  #   branches: [ master ]
  workflow_dispatch:

jobs:
  # TODO: /home/runner/work/_temp/edd378df-9516-480d-bfa0-94fdd96d7a26.sh: line 1: flutter: command not found
  # setup:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Cache Flutter dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: /opt/hostedtoolcache/flutter
  #         key: ${{ runner.os }}-flutter

  #     - uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'stable'

  deploy:
    # needs: setup
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        env:
          BUNDLE_GEMFILE: ${{ github.workspace }}/android/Gemfile
        with:
          bundler-cache: true

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # TODO: see above
      # - name: Cache Flutter
      #   id: cache-flutter
      #   uses: actions/cache@v2
      #   with:
      #     path: /opt/hostedtoolcache/flutter
      #     key: ${{ runner.os }}-flutter

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      
      - run: flutter pub get

      - name: Set up andorid credenitals
        run: |
          echo "::add-mask::${{ secrets.KEYSTORE_PASSWORD }}"
          echo "::add-mask::${{ secrets.KEY_PASSWORD }}"
          echo "::add-mask::${{ secrets.KEY_ALIAS }}"
          echo "::add-mask::${{ secrets.KEYSTORE_FILE }}"
          echo "::add-mask::${{ secrets.PLAYSTORE_CREDENTIALS }}"


          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties
          echo "${{ secrets.KEYSTORE_FILE }}" | base64 -d > android/app/keystore.jks

          echo "${{ secrets.PLAYSTORE_CREDENTIALS }}" | base64 -d > android/playstore-credentials.jks

      - name: Build & deploy Android release
        run: |
          cd android
          bundle exec fastlane deploy_internal
